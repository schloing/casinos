
Discarded input sections

 .bss           0x00000000        0x0 build/stage1.o
 .bss           0x00000000        0x0 build/stage2.o
 .bss           0x00000000        0x0 build/cboot.o
 .comment       0x00000000       0x2c build/cboot.o
 .note.GNU-stack
                0x00000000        0x0 build/cboot.o
 .eh_frame      0x00000000       0x38 build/cboot.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00000200                        SECTOR_SIZE = 0x200
                0x00007c00                        STAGE1_VMA = 0x7c00
                0x00000000                        STAGE1_LMA = 0x0
                0x00007e00                        STAGE2_VMA = (STAGE1_VMA + SECTOR_SIZE)
                0x00000200                        STAGE2_LMA = 0x200

/DISCARD/
 *(.bss)
 *(.eh_frame)
 *(.rela.eh_frame)
 *(.comment)
 *(.note.gnu.property)
 *(.note.GNU-stack)
 *(.dynamic)
                0x00007c00                        . = STAGE1_VMA
                0x00007c00                        _sboot = .

.stage1         0x00007c00      0x200 load address 0x00000000
 build/stage1.o(.text*)
 .text          0x00007c00      0x200 build/stage1.o
                0x00007c00                _start
                0x00007c03                diskread
                0x00007c32                print
                0x00007c4b                hexprint
                0x00007d10                dapack
                0x00007d12                .sectors
                0x00007d14                .transfer
                0x00007d18                .lba
 build/stage1.o(.data*)
 .data          0x00007e00        0x0 build/stage1.o
 build/stage1.o(.rodata*)
                0x00007e00                        _eboot = .
                0x00000200                        _stage1_size = (_eboot - _sboot)
                0x00007e00                        . = STAGE2_VMA
                0x00007e00                        _sboot2 = .

.stage2         0x00007e00      0x1b4 load address 0x00000200
 build/stage2.o(.text*)
 .text          0x00007e00      0x1b1 build/stage2.o
                0x00007ee0                cpuid_vendor_string
                0x00007ef0                cpuid_feat_edx
                0x00007f10                cpuid_feat_ecx
                0x00007f30                gdt
 build/stage2.o(.data*)
 *fill*         0x00007fb1        0x3 
 .data          0x00007fb4        0x0 build/stage2.o
 build/stage2.o(.rodata*)
                0x00007fb4                        _eboot2 = .
                0x000001b4                        _stage2_size = (_eboot2 - _sboot2)
                0x00007fb4                        . = (STAGE2_VMA + _stage2_size)

.cboot          0x00007fb4       0x2c load address 0x000003b4
 build/cboot.o(.text*)
 .text          0x00007fb4       0x22 build/cboot.o
                0x00007fb4                cboot_main
 build/cboot.o(.data*)
 *fill*         0x00007fd6        0x2 
 .data          0x00007fd8        0x0 build/cboot.o
 build/cboot.o(.rodata*)
 .rodata        0x00007fd8        0x8 build/cboot.o
LOAD build/stage1.o
LOAD build/stage2.o
LOAD build/cboot.o
OUTPUT(build/boot.bin binary)
